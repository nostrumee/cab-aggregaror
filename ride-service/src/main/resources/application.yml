server:
  port: 8083

spring:
  application:
    name: ride-service

  datasource:
    url: jdbc:postgresql://localhost:5432/ride_db
    username: admin
    password: password
    driver-class-name: org.postgresql.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    hibernate:
      ddl-auto: validate
    show-sql: true

  liquibase:
    change-log: db/changelog/changelog-master.xml

  cloud:
    openfeign:
      client:
        config:
          passenger-service:
            logger-level: FULL
          driver-service:
            logger-level: FULL

springdoc:
  override-with-generic-response: false
  api-docs:
    path: /${spring.application.name}/v3/api-docs

eureka:
  instance:
    prefer-ip-address: true
    metadata-map:
      "prometheus.scrape": "true"
      "prometheus.path": "/actuator/prometheus"
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

resilience4j:
  circuitbreaker:
    metrics:
      enabled: true
    instances:
      driver-service:
        register-health-indicator: true
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        failure-rate-threshold: 50
        record-exceptions:
          - feign.RetryableException
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

      passenger-service:
        register-health-indicator: true
        sliding-window-size: 10
        permitted-number-of-calls-in-half-open-state: 5
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 5s
        failure-rate-threshold: 50
        record-exceptions:
          - feign.RetryableException
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

kafka:
  create-ride-topic-name: create-ride-topic
  accept-ride-topic-name: accept-ride-topic
  ride-status-topic-name: ride-status-topic
  driver-status-topic-name: driver-status-topic
  bootstrap-servers: localhost:9092
  group-id: ${spring.application.name}

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org.apache.kafka.clients.consumer.internals.ConsumerCoordinator: WARN
    org.apache.kafka.clients.Metadata: WARN
    com.modsen.rideservice.client: DEBUG

driver-service:
  name: driver-service

passenger-service:
  name: passenger-service

management:
  endpoints:
    web:
      exposure:
        include: prometheus, health
  metrics:
    tags:
      application: ${spring.application.name}
